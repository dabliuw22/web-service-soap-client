configurations {
    jaxb
}

buildscript {
	ext {
		springBootVersion = '1.5.10.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

// tag::wsdl[]
task genJaxb {
    //ext.sourcesDir = '${buildDir}/generated-sources/jaxb'
    ext.sourcesDir = 'src/main/java'
    ext.classesDir = '${buildDir}/classes/jaxb'
    ext.schema = 'http://localhost:8888/ws/autores.wsdl'

    outputs.dir classesDir

    doLast() {
        project.ant {
            taskdef name: 'xjc', classname: 'com.sun.tools.xjc.XJCTask',
                    classpath: configurations.jaxb.asPath
            mkdir(dir: sourcesDir)
            mkdir(dir: classesDir)

            xjc(destdir: sourcesDir, schema: schema,
                    package: 'com.leysoft.ws.autor') {
                arg(value: '-wsdl')
                produces(dir: sourcesDir, includes: '**/*.java')
            }

            javac(destdir: classesDir, source: 1.8, target: 1.8, debug: true,
                    debugLevel: 'lines,vars,source',
                    classpath: configurations.jaxb.asPath) {
                src(path: sourcesDir)
                include(name: '**/*.java')
                include(name: '*.java')
            }

            copy(todir: classesDir) {
                fileset(dir: sourcesDir, erroronmissingdir: false) {
                    exclude(name: '**/*.java')
                }
            }
        }
    }
}
// end::wsdl[]

group = 'com.leysoft'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	
	compile('org.springframework.ws:spring-ws-core')
    compile(files(genJaxb.classesDir).builtBy(genJaxb))
    jaxb 'com.sun.xml.bind:jaxb-xjc:2.1.7'
    
    runtime('org.springframework.boot:spring-boot-devtools')
    
	testCompile('org.springframework.boot:spring-boot-starter-test')
}

task afterEclipseImport {
    dependsOn genJaxb
}

